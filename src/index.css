body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

/* define varibles */
:root {
  --bg: #242526;
  --bg-accent: #484a4d;
  --text-color: #dadce1;
  --nav-size: 60px;
  --border: 1px solid #474a4d;
  --speed: 500ms;
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

a {
  color: var(--text-color);
  text-decoration: none;
}


/* NavBar start */

.navbar {
  height: var(--nav-size);
  background-color: var(--bg);
  padding: 0 1rem;
  border-bottom: var(--border);
}

.navbar-nav {
  width: 100%;
  height: 100%; /* 100% width and height from the parents */
  display: flex;
  justify-content: flex-end; /* flex row; childern start at the end */
}

.nav-item {
  /* calc : do math in css */
  width: calc(var(--nav-size) * 0.8); /* taking navbar varible which 60px and we will multiply it by 80% */
  display: flex;
  align-items: center;
  justify-content: center;
}

/* making circule shape for the button */
.icon-button {
  /* declaring new varible */
  --button-size: calc(var(--nav-size) * 0.5); /* this given us a size that 50% of the original navbar */
  width: var(--button-size);
  height: var(--button-size);
  background-color: #484a4d;
  border-radius: 50%;
  /* aliging the items inside the circule in the middle */
  padding: 5px;
  margin: 2px;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: filter 300ms;
}

.icon-button:hover {
  filter: brightness(1.2);
}

.icon-button svg {
  fill: var(--text-color);
  width: 20px;
  height: 20px;
}

/* Absolute positioning wllows us to explicity offset an element based on its container */
.dropdown {
  position: absolute;
  top: 58px;
  width: 300px;
  transform: translateX(-45%); /* transform: translate it just meaning MOVE */
  background-color: var(--bg);
  border: var(--border);
  border-radius: var(--border-radius);
  padding: 1rem;
  overflow: hidden;
}

.menu-item {
  height: 50px;
  display: flex;
  align-items: center;
  border-radius: var(--border-radius);
  transition: background var(--speed);
  padding: 0.5rem;
}

.menu-item:hover {
  background-color: #525357;
}

.icon-righ {
  margin-left: auto;
}


/* 
* for CSS transition we need 4 classes
    1 : enter
    2 : enter-active
    3 : exit
    4 : exit-active

    When the menu-primary become true it will add the class enter to the div
    after a timeout of 500 ms it will add the enter active class  

    When it becomes false it does the opposit
    it add the exit class and then the exit-active class

*/

/* css transition starts */
.menu-primary-enter {
  position: absolute;
  transform: translateX(-110%); /* it will be invisible off to the left */
}
.menu-primary-enter-active {
  transform: translateX(0%); /* after 500ms we will bring it back */
  transition: all var(--speed) ease;
}
.menu-primary-exit {
  position: absolute;

}
.menu-secondary-exit-active {
  transform: translateX(-110%);
  transition: all var(--speed) ease;
}

.menu-secondary-enter {
  position: absolute;
  transform: translateX(110%); /* it will be invisible off to the left */
}
.menu-secondary-enter-active {
  transform: translateX(0%); /* after 500ms we will bring it back */
  transition: all var(--speed) ease;
}
.menu-secondary-exit {
  position: absolute;
  
}
.menu-secondary-exit-active {
  transform: translateX(110%);
  transition: all var(--speed) ease;
}